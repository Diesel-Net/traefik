# docker-compose.yaml

version: '3.7'
services: 


  server:
    image: "traefik:v2.3"
    volumes:
      - "{{ unix_localtime }}:{{ unix_localtime }}"
      - /var/run/docker.sock:/var/run/docker.sock
      - /etc/ssl/certs/:/etc/ssl/certs/
    ports:
      - 80:80
      - 443:443
    command:
      # Logging
      - "--log.level=INFO"
      - "--accesslog"

      # Docker swarm configuration
      - "--providers.docker.endpoint=unix:///var/run/docker.sock"
      - "--providers.docker.swarmMode=true"
      - "--providers.docker.exposedbydefault=false"
      - "--providers.docker.network={{ docker_network }}"
      # Configure entrypoint
      - "--entrypoints.web.address=:80"
      - "--entrypoints.websecure.address=:443"
      # SSL configuration
      - "--certificatesresolvers.diesel-net.acme.httpchallenge=true"
      - "--certificatesresolvers.diesel-net.acme.httpchallenge.entrypoint=web"
      - "--certificatesresolvers.diesel-net.acme.email={{ acme_email }}"
      - "--certificatesresolvers.diesel-net.acme.storage=acme.json"
      - "--certificatesresolvers.diesel-net.acme.caServer={{ acme_url }}"
      # Global HTTP -> HTTPS
      - "--entrypoints.web.http.redirections.entryPoint.to=websecure"
      - "--entrypoints.web.http.redirections.entryPoint.scheme=https"
      # Enable dashboard
      - "--api.dashboard=true"
    deploy:
      restart_policy:
        condition: any
      placement:
        constraints:
          - node.role == manager
      labels:
        # Expose dashboard
        - traefik.enable=true
        - traefik.http.services.traefik.loadbalancer.server.port=888
        - traefik.http.routers.traefik.tls.certresolver=diesel-net
        - traefik.http.routers.traefik.rule=Host(`{{ domains | join(',') }}`)
        - traefik.http.routers.traefik.rule=PathPrefix(`/api`) || PathPrefix(`/dashboard`)
        - traefik.http.routers.traefik.service=api@internal
        - traefik.http.routers.traefik.middlewares=traefik-auth
        - traefik.http.middlewares.traefik-auth.basicauth.users={{ htpasswd }}
    networks:
      - {{ docker_network }}

  hello:
    image: nginxdemos/hello
    deploy:
      labels:
        - traefik.enable=true
        - traefik.http.services.hello.loadbalancer.server.port=80
        - traefik.http.routers.hello.tls.certresolver=diesel-net
        - traefik.http.routers.hello.rule=Host(`{{ domains | join(',') }}`) #&& PathPrefix(`/hello`)
        #- traefik.http.middlewares.hello.stripprefix.prefixes=/hello"
        
        
    networks:
      - {{ docker_network }}

networks:
  {{ docker_network }}:
    external:
      name: {{ docker_network }}
