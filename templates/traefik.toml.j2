# traefik.toml
# https://docs.traefik.io/

# Log level
#
# Optional
# Default: "ERROR"
#
# Accepted values, in order of severity: "DEBUG", "INFO", "WARN", "ERROR", "FATAL", "PANIC"
# Messages at and above the selected level will be logged.
#
logLevel = "WARN"

# Enable debug mode.
# This will install HTTP handlers to expose Go expvars under /debug/vars and
# pprof profiling data under /debug/pprof/.
# The log level will be set to DEBUG unless `logLevel` is specified.
#
# Optional
# Default: false
#
debug = false   

# Periodically check if a new version has been released.
#
# Optional
# Default: true
#
checkNewVersion = true

# Tells traefik whether it should keep the trailing slashes in the paths (e.g. /paths/) or redirect to the no trailing slash paths instead (/paths).
#
# Optional
# Default: false
#
keepTrailingSlash = false

# Providers throttle duration.
#
# Optional
# Default: "2s"
#
providersThrottleDuration = "2s"

# Controls the maximum idle (keep-alive) connections to keep per-host.
#
# Optional
# Default: 200
#
maxIdleConnsPerHost = 200

# If set to true invalid SSL certificates are accepted for backends.
# This disables detection of man-in-the-middle attacks so should only be used on secure backend networks.
#
# Optional
# Default: false
#
insecureSkipVerify = false

# Entrypoints to be used by frontends that do not specify any entrypoint.
# Each frontend can specify its own entrypoints.
#
# Optional
# Default: ["http"]
#
defaultEntryPoints = ["http", "https"]

# EntryPoints definition
[entryPoints]
    [entryPoints.http]
        address = ":80"
        [entryPoints.http.redirect]
            entryPoint = "https"
    [entryPoints.traefik]
        address = ":8080"
        #[entryPoints.traefik.auth.basic]
            #usersFile = "/run/secrets/htpasswd"
    [entryPoints.https]
        address = ":443"
        [entryPoints.https.tls]
{% for item in certs %}
            [[entryPoints.https.tls.certificates]]
                certFile = "/etc/ssl/certs/{{ item.common_name }}.cert"
                keyFile = "/etc/ssl/certs/{{ item.common_name }}.key"
{% endfor %}

# Enable access logs
[accessLog]


# API definition (dashboard)
# Warning: Enabling API will expose Traefik's configuration.
# It is not recommended in production,
# unless secured by authentication and authorizations
[api]
    # Name of the related entry point
    #
    # Optional
    # Default: "traefik"
    #
    entryPoint = "traefik"

    # Enable Dashboard
    #
    # Optional
    # Default: true
    #
    dashboard = true

    # Enable debug mode.
    # This will install HTTP handlers to expose Go expvars under /debug/vars and
    # pprof profiling data under /debug/pprof.
    # Additionally, the log level will be set to DEBUG.
    #
    # Optional
    # Default: false
    #
    debug = false

# Enable retry sending request if network error
[retry]
    # Number of attempts
    #
    # Optional
    # Default: (number servers in backend) -1
    #
    attempts = 3

# Enable hot reloads when CERTS get updated? Need to verify..
[file]
    watch = true

# Enable Docker Provider
[docker]
    # Docker server endpoint. Can be a tcp or a unix socket endpoint.
    #
    # Required
    #
    endpoint = "unix:///var/run/docker.sock"

    # Enable watch docker changes.
    #
    # Optional
    #
    watch = true

    # Expose containers by default in Traefik.
    # If set to false, containers that don't have `traefik.enable=true` will be ignored.
    #
    # Optional
    # Default: true
    #
    exposedByDefault = false

    # Use the IP address from the binded port instead of the inner network one.
    #
    # In case no IP address is attached to the binded port (or in case 
    # there is no bind), the inner network one will be used as a fallback.     
    #
    # Optional
    # Default: false
    #
    usebindportip = false

    # Use Swarm Mode services as data provider.
    #
    # Optional
    # Default: false
    #
    swarmMode = true

    # Polling interval (in seconds) for Swarm Mode.
    #
    # Optional
    # Default: 15
    #
    swarmModeRefreshSeconds = 5
